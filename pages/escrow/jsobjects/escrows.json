{
  "unpublishedCollection": {
    "name": "escrows",
    "pageId": "escrow",
    "pluginId": "js-plugin",
    "pluginType": "JS",
    "actions": [],
    "archivedActions": [],
    "body": "export default {\n\trefresh_escrows: () => {\n\t\tget_escrow.run(() => {\n\t\t\tescrows.escrow_dropdowns();\n\t\t\tescrows.escrow_all();\n\t\t}, () => showAlert('Couldnt refresh escrows','warning'))\n\t},\n\tescrow_register_response: () => {\n\t\tescrow_register_sf.run(() => {\n\t\t\tescrow_register.run(() => {escrows.refresh_escrows(); showAlert('Escrow Registered', 'success')}, () => showAlert('Couldnt register the Escrow in DB', 'error'))\n\t\t}, () => showAlert('Couldnt register the Escrow in chain'))\t\t\n\t},\n\tescrow_create_response: () => {\n\t\tescrow_create_sf.run(() => {\n\t\t\tescrow_create.run(() => {\n\t\t\t\tescrow_owners.run(() => {\n\t\t\t\t\tescrows.refresh_escrows();\n\t\t\t\t}, () => showAlert('Couldnt submit the owners')); showAlert('Escrow Created', 'success')}, () => showAlert('Couldnt create the Escrow in DB', 'error'))\n\t\t}, () => showAlert('Couldnt create the Escrow in chain'))\t\t\n\t},\n\tescrow_all: async() => {\n\t\tawait storeValue(\"escrow_table\", get_escrow.data.sf_escrow);\n\t\treturn appsmith.store.escrow_table\n\t},\n\tescrow_dropdowns: () => {\n\t\tstoreValue(\"escrows\", undefined);\n\t\tstoreValue(\"escrows\", get_data.getEscrows(get_escrow.data.sf_escrow));\n\t\tstoreValue(\"escrows_classes\", undefined);\n\t\tstoreValue(\"escrows_classes\", get_data.getClassEscrows(get_escrow.data.sf_escrow));\n\t\treturn appsmith.store.escrows;\n\t},\n\tsubmit_owner: () => {\n\t\tlet array = [];\n\t\tif (Owners_table.tableData != undefined){\n\t\t\tarray = Owners_table.tableData;\n\t\t}\n\t\tlet new_value = {\n\t\t\t\"owner\": CreateEscrow_owner.text,\n\t\t\t\"share\": parseInt(CreateEscrow_share.text),\n\t\t\t\"id\": appsmith.store.accounts[CreateEscrow_ownerSelection.value].id\n\t\t}\n\t\tarray.push(new_value);\n\t\tstoreValue(\"owners_table\", undefined);\n\t\tstoreValue(\"owners_table\", array);\n\t}, \n\tsubmit_assets: () => {\n\t\tlet array = [];\n\t\tif (DepositEscrow_table.tableData != undefined){\n\t\t\tarray = DepositEscrow_table.tableData;\n\t\t}\n\t\tlet new_value = {\n\t\t\t\"class_id\": parseInt(DepositEscrow_classID.text),\n\t\t\t\"asset_id\": parseInt(DepositEscrow_assetID.text),\n\t\t\t\"amount\": parseInt(DepositEscrow_amount.text),\n\t\t}\n\t\tarray.push(new_value);\n\t\tstoreValue(\"deposit_table\", undefined);\n\t\tstoreValue(\"deposit_table\", array);\n\t},\n\tescrow_deposit: () => {\n\t\tlet deposit_classes = [];\n\t\tlet deposit_assets = [];\n\t\tlet deposit_amounts = [];\n\t\tlet length = DepositEscrow_table.tableData.length;\t\t\n\t\tfor (let i=0; i < length; i++) {\n\t\t\tif (!deposit_classes.includes(DepositEscrow_table.tableData[i].class_id)){\n\t\t\t\tdeposit_classes.push(DepositEscrow_table.tableData[i].class_id)\n\t\t\t\tlet assets = [];\n\t\t\t\tlet amounts = [];\n\t\t\t\tfor (let j=0; j < length; j++){\n\t\t\t\t\tif(DepositEscrow_table.tableData[j].class_id == DepositEscrow_table.tableData[i].class_id){\n\t\t\t\t\t\tassets.push(DepositEscrow_table.tableData[j].asset_id);\n\t\t\t\t\t\tamounts.push(DepositEscrow_table.tableData[j].amount);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdeposit_assets.push(assets);\n\t\t\t\tdeposit_amounts.push(amounts);\n\t\t\t} \n\t\t}\t\t\n\t\treturn {\n\t\t\t\t\"seed\": DepositEscrow_seed.text,\n\t\t\t\t\"escrow\": appsmith.store.escrows[DepositEscrow_escrowSelection.value].chain_id,\n        \"class_ids\": deposit_classes,\n        \"asset_ids\": deposit_assets,\n        \"amounts\": deposit_amounts\n    };\n\t},\n\tescrow_owners: () => {\n\t\tlet escrow_owners = [];\n\t\tlet escrow_shares = [];\n\t\tlet length = Owners_table.tableData.length;\t\t\n\t\tfor (let i=0; i < length; i++) {\n\t\t\t\tescrow_owners.push(Owners_table.tableData[i].owner);\n\t\t\t\tescrow_shares.push(Owners_table.tableData[i].share);\n\t\t}\n\t\treturn {\n        \"seed\": RegisterEscrow_form.data.RegisterEscrow_seed,\n    \t\t\"class_id\": RegisterEscrow_form.data.RegisterEscrow_chainClassID,\n    \t\t\"owners\": escrow_owners,\n\t\t\t\t\"shares\": escrow_shares\n    }\n\t},\n  consult : () => {\n\t\treturn appsmith.store.owners_table;\n\t}\n}",
    "variables": []
  },
  "id": "escrow_escrows",
  "deleted": false,
  "gitSyncId": "626963714f1cdf5623f836b1_6269904137427d7fa953781d"
}
{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "bundle_schema",
    "fullyQualifiedName": "bundle.bundle_schema",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "bundle",
    "collectionId": "bundle_bundle",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "() => {\n\t\tlet schema_classes = [];\n\t\tlet schema_assets = [];\n\t\tlet schema_amounts = [];\n\t\tlet length = Schema_table.tableData.length;\t\t\n\t\tfor (let i=0; i < length; i++) {\n\t\t\tif (!schema_classes.includes(Schema_table.tableData[i].class_id)){\n\t\t\t\tschema_classes.push(Schema_table.tableData[i].class_id)\n\t\t\t\tlet assets = [];\n\t\t\t\tlet amounts = [];\n\t\t\t\tfor (let j=0; j < length; j++){\n\t\t\t\t\tif(Schema_table.tableData[j].class_id == Schema_table.tableData[i].class_id){\n\t\t\t\t\t\tassets.push(Schema_table.tableData[j].asset_id);\n\t\t\t\t\t\tamounts.push(Schema_table.tableData[j].amount);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tschema_assets.push(assets);\n\t\t\t\tschema_amounts.push(amounts);\n\t\t\t} \n\t\t}\t\t\n\t\treturn {\n        \"class_ids\": schema_classes,\n        \"asset_ids\": schema_assets,\n        \"amounts\": schema_amounts\n    };\n\t}",
      "jsArguments": [],
      "isAsync": false
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "() => {\n\t\tlet schema_classes = [];\n\t\tlet schema_assets = [];\n\t\tlet schema_amounts = [];\n\t\tlet length = Schema_table.tableData.length;\t\t\n\t\tfor (let i=0; i < length; i++) {\n\t\t\tif (!schema_classes.includes(Schema_table.tableData[i].class_id)){\n\t\t\t\tschema_classes.push(Schema_table.tableData[i].class_id)\n\t\t\t\tlet assets = [];\n\t\t\t\tlet amounts = [];\n\t\t\t\tfor (let j=0; j < length; j++){\n\t\t\t\t\tif(Schema_table.tableData[j].class_id == Schema_table.tableData[i].class_id){\n\t\t\t\t\t\tassets.push(Schema_table.tableData[j].asset_id);\n\t\t\t\t\t\tamounts.push(Schema_table.tableData[j].amount);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tschema_assets.push(assets);\n\t\t\t\tschema_amounts.push(amounts);\n\t\t\t} \n\t\t}\t\t\n\t\treturn {\n        \"class_ids\": schema_classes,\n        \"asset_ids\": schema_assets,\n        \"amounts\": schema_amounts\n    };\n\t}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "bundle_bundle.bundle_schema",
  "deleted": false,
  "gitSyncId": "62572a650ab3884f9e41db68_625f2cbe02ab467c5382e2c4"
}